{
  "mcu": {
    "serial": "/dev/serial/by-id/usb-Klipper_stm32f446xx_1E0021000E5053424E363620-if00",
    "baud": 250000,
    "max_stepper_error": 0.000025
  },
  "mcu rpi": {
    "serial": "/tmp/klipper_host_mcu",
    "max_stepper_error": 0.000025
  },
  "virtual_sdcard": {
    "path": "/home/pi/printer_data/gcodes",
    "on_error_gcode": ""
  },
  "pause_resume": {
    "recover_velocity": 50
  },
  "gcode_macro cancel_print": {
    "gcode": "\nPRINT_END\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nBASE_CANCEL_PRINT\nM106 S0",
    "rename_existing": "BASE_CANCEL_PRINT",
    "description": "G-Code macro"
  },
  "gcode_macro bed_mesh_calibrate": {
    "gcode": "\n\n{% if display_parameters == True %}\n{ action_respond_info(\"led_enable  : %d\" % (led_enable))  }\n{ action_respond_info(\"status_macro: \\'%s\\'\" % (status_macro))  }\n{ action_respond_info(\"fuzz_enable : %d\" % (fuzz_enable))  }\n{ action_respond_info(\"fuzz_min    : %f\" % (fuzz_min))  }\n{ action_respond_info(\"fuzz_max    : %f\" % (fuzz_max))  }\n{ action_respond_info(\"probe_dock_enable: %d\" % (probe_dock_enable))  }\n{ action_respond_info(\"attach_macro: \\'%s\\'\" % (attach_macro))  }\n{ action_respond_info(\"detach_macro: \\'%s\\'\" % (detach_macro))  }\n{% endif %}\n\n{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}\n{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}\n{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}\n{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}\n{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}\n{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}\n{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}\n{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}\n{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}\n{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}\n{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}\n\n{% if margin_enable == False %}\n{% set margin_size = 0 %}\n{% endif %}\n\n{ action_respond_info(\"{} object points, clamping to bed mesh [{!r} {!r}]\".format(\nall_points | count,\nbed_mesh_min,\nbed_mesh_max,\n)) }\n\n{% if fuzz_enable == True %}\n{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}\n{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}\n{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}\n{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}\n{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}\n{% else %}\n{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}\n{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}\n{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}\n{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}\n{% endif %}\n\n{ action_respond_info(\"Object bounds, clamped to the bed_mesh: {!r}, {!r}\".format(\n(x_min, y_min),\n(x_max, y_max),\n)) }\n\n{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}\n{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}\n\n{% if (([points_x, points_y]|max) > 6) %}\n{% set algorithm = \"bicubic\" %}\n{% set min_points = 4 %}\n{% else %}\n{% set algorithm = \"lagrange\" %}\n{% set min_points = 3 %}\n{% endif %}\n{ action_respond_info( \"Algorithm: {}\".format(algorithm)) }\n\n{% set points_x = [points_x, min_points]|max  %}\n{% set points_y = [points_y, min_points]|max  %}\n{ action_respond_info( \"Points: x: {}, y: {}\".format(points_x, points_y) ) }\n\n{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}\n{% set ref_index = (points_x * points_y / 2) | int %}\n{ action_respond_info( \"Reference index: {}\".format(ref_index) ) }\n{% else %}\n{% set ref_index = -1 %}\n{% endif %}\n\n{% if probe_dock_enable == True %}\n{attach_macro}\n{% endif %}\n\n{% if led_enable == True %}\n{status_macro}\n{% endif %}\n\n_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}\n\n{% if probe_dock_enable == True %}\n{detach_macro}\n{% endif %}",
    "rename_existing": "_BED_MESH_CALIBRATE",
    "description": "G-Code macro",
    "variable_led_enable": "False",
    "variable_status_macro": "'status_meshing'",
    "variable_fuzz_enable": "False",
    "variable_fuzz_min": "0",
    "variable_fuzz_max": "4",
    "variable_margin_enable": "False",
    "variable_margin_size": "5",
    "variable_probe_dock_enable": "False",
    "variable_attach_macro": "'Attach_Probe'",
    "variable_detach_macro": "'Dock_Probe'",
    "variable_display_parameters": "True"
  },
  "gcode_macro setup_kamp_meshing": {
    "gcode": "\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE='\"{params.STATUS_MACRO|default('status_meshing')|string}\"'\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}\n\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE='\"{params.ATTACH_MACRO|default('Attach_Probe')|string}\"'\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE='\"{params.DETACH_MACRO|default('Dock_Probe')|string}\"'",
    "description": "G-Code macro"
  },
  "gcode_macro line_purge": {
    "gcode": "\n\n{% if display_parameters == True %}\n{ action_respond_info(\"adaptive_enable : %d\" % (adaptive_enable))  }\n{ action_respond_info(\"z_height        : %f\" % (z_height))  }\n{ action_respond_info(\"purge_amount    : %f\" % (purge_amount))  }\n{ action_respond_info(\"line_length     : %f\" % (line_length))  }\n{ action_respond_info(\"flow_rate       : %f\" % (flow_rate))  }\n{ action_respond_info(\"x_default       : %f\" % (x_default))  }\n{ action_respond_info(\"y_default       : %f\" % (y_default))  }\n{ action_respond_info(\"distance_to_object_y : %f\" % (distance_to_object_y))  }\n{% endif %}\n\n{% if adaptive_enable == True %}\n{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}\n{% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}\n{% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}\n{% set x_origin = ([x_origin, 0] | max) %}\n{% set y_origin = ([y_origin, 0] | max) %}\n{% else %}\n{% set x_origin = x_default | float %}\n{% set y_origin = y_default | float %}\n{% endif %}\n{% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}\n{% set cross_section = nozzle_dia * z_height | float %}\n{% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}\n{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}\n\nG92 E0\nG0 F{travel_speed}\nG90\nG0 X{x_origin} Y{y_origin - distance_to_object_y}\nG0 Z{z_height}\nM83\nG1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}\nG1 E-.5 F2100\nG92 E0\nM82\nG0 Z{z_height * 2} F{travel_speed}",
    "description": "A purge macro that adapts to be near your actual printed objects",
    "variable_adaptive_enable": "True",
    "variable_z_height": "0.4",
    "variable_purge_amount": "40",
    "variable_line_length": "50",
    "variable_flow_rate": "12",
    "variable_x_default": "10",
    "variable_y_default": "10",
    "variable_distance_to_object_y": "10",
    "variable_display_parameters": "True"
  },
  "gcode_macro setup_line_purge": {
    "gcode": "\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}\nSET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}",
    "description": "G-Code macro"
  },
  "gcode_macro mesh_config": {
    "gcode": "\n{% set X0 = params.X0 | float %}\n{% set X1 = params.X1 | float %}\n{% set Y0 = params.Y0 | float %}\n{% set Y1 = params.Y1 | float %}\n{% set center_x = ((X0 + X1) / 2) | float %}\n{% set center_y = ((Y0 + Y1) / 2) | float %}\n\nEXCLUDE_OBJECT_DEFINE NAME=s3d_build_volume CENTER={center_x},{center_y} POLYGON=[[{X0},{Y0}],[{X0},{Y1}],[{X1},{Y1}],[{X1},{Y0}]]",
    "description": "Stop-gap macro for converting Simplify3D's print area into an object for exclude_object"
  },
  "gcode_macro voron_purge": {
    "gcode": "\n\n{% if display_parameters == True %}\n{ action_respond_info(\"adaptive_enable : %d\" % (adaptive_enable))  }\n{ action_respond_info(\"z_height        : %f\" % (z_height))  }\n{ action_respond_info(\"tip_distance    : %f\" % (tip_distance))  }\n{ action_respond_info(\"purge_amount    : %f\" % (purge_amount))  }\n{ action_respond_info(\"flow_rate       : %f\" % (flow_rate))  }\n{ action_respond_info(\"x_default       : %f\" % (x_default))  }\n{ action_respond_info(\"y_default       : %f\" % (y_default))  }\n{ action_respond_info(\"size            : %f\" % (size))  }\n{ action_respond_info(\"distance_to_object_x : %f\" % (distance_to_object_x))  }\n{ action_respond_info(\"distance_to_object_y : %f\" % (distance_to_object_y))  }\n{% endif %}\n\n{% if adaptive_enable == True %}\n{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}\n{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}\n{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}\n{% set x_origin = ([x_origin, 0] | max) %}\n{% set y_origin = ([y_origin, 0] | max) %}\n{% else %}\n{% set x_origin = x_default | float %}\n{% set y_origin = y_default | float %}\n{% endif %}\n{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}\n{% set prepurge_speed = flow_rate / 2.405 %}\n{% set travel_speed = printer.toolhead.max_velocity %}\n{ action_respond_info( \"x: \" + x_origin|string + \" y: \" + y_origin|string + \" purge_move_speed: \" + purge_move_speed|string + \" prepurge_speed: \" + prepurge_speed|string ) }\n\nG92 E0\nG0 F{travel_speed*60}\nG90\nG0 X{x_origin} Y{y_origin+size/2}\nG0 Z{z_height}\nM83\nG1 E{tip_distance} F{prepurge_speed*60}\nG1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}\nG1 E-.5 F2100\nG0 Z{z_height*2}\nG0 X{x_origin+size*0.789} Y{y_origin+size}\nG0 Z{z_height}\nG1 E.5 F2100\nG1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}\nG1 E-.5 F2100\nG0 Z{z_height*2}\nG0 X{x_origin+size*0.711} Y{y_origin}\nG0 Z{z_height}\nG1 E.5 F2100\nG1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}\nG1 E-.5 F2100\nG92 E0\nM82\nG0 Z{z_height*2}",
    "description": "A purge macro that adapts to be near your actual printed objects",
    "variable_adaptive_enable": "True",
    "variable_z_height": "0.4",
    "variable_tip_distance": "10",
    "variable_purge_amount": "40",
    "variable_flow_rate": "10",
    "variable_x_default": "10",
    "variable_y_default": "10",
    "variable_size": "10",
    "variable_distance_to_object_x": "10",
    "variable_distance_to_object_y": "10",
    "variable_display_parameters": "True"
  },
  "gcode_macro setup_voron_purge": {
    "gcode": "\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=tip_distance  VALUE={params.TIP_DISTANCE|default(10)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(10)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=size          VALUE={params.SIZE|default(10)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=distance_to_object_x     VALUE={params.DISTANCE_TO_OBJECT_X|default(10)|float}\nSET_GCODE_VARIABLE MACRO=VORON_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}",
    "description": "G-Code macro"
  },
  "gcode_macro clean_nozzle": {
    "gcode": "\n{% set USE_HEATER = (params.USE_HEATER|default(False)) %}\n{% set EOFFSET = printer['configfile'].config[\"probe\"][\"z_offset\"]|float %}\n{% set TARGET_TEMP = printer.extruder.target %}\n\n\n\n{% if \"xyz\" in printer.toolhead.homed_axes %}\nstatus_cleaning\n\nSAVE_GCODE_STATE NAME=clean_nozzle\nSET_GCODE_OFFSET Z=0\n\nG91\n\n\n{% set Ry = printer.configfile.config[\"stepper_y\"][\"position_max\"]|float %}\n{ action_respond_info(\"Cleaning purge_spd: %.1f and ret_spd: %.1f use_heater: %s\" % (purge_spd * 60, purge_ret_sped * 60, params.USE_HEATER)) }\n\n{% if enable_purge %}\n\nG1 Z{brush_top + EOFFSET - 2 + clearance_z} F{prep_spd_z*60}\nG90\nG1 X{bucket_start + (bucket_width / 2)} Y{brush_front + brush_depth} F{prep_spd_xy*60}\nG1 Z{brush_top + EOFFSET - 2 + clearance_z} F{prep_spd_z*60}\n\n\n{% if params.USE_HEATER and printer[\"gcode_macro PRINT_START\"].target_extruder_tmp >= purge_temp_min %}\nM109 S{printer[\"gcode_macro PRINT_START\"].target_extruder_tmp}\n{% endif %}\n\n\n{% if printer.extruder.temperature >= purge_temp_min %}\nM83\nG1 E{purge_len} F{purge_spd * 60}\nG1 E-{purge_ret} F{purge_ret_sped * 60}\nG4 P{ooze_dwell * 1000}\nG92 E0\n{% endif %}\n\n{% endif %}\n\n\nG1 Z{brush_top + EOFFSET - 2 + clearance_z} F{prep_spd_z*60}\nG1 X{brush_start + brush_width} F{prep_spd_xy*60}\nG1 Y{brush_front + (brush_depth / 2)}\n\n\n\nG1 Z{brush_top + EOFFSET - 2} F{prep_spd_z*60}\n\n\n{% for wipes in range(1, (wipe_qty + 1)) %}\nG1 X{brush_start} Y{brush_front} F{wipe_spd_xy*60}\nG1 X{brush_start + brush_width} Y{brush_front + brush_depth} F{wipe_spd_xy*60}\n{% endfor %}\n\n\nM117 Cleaned!\nG1 Z{brush_top + EOFFSET - 2 + clearance_z} F{prep_spd_z*60}\nG1 X{brush_start + brush_width + bucket_width/4} F{prep_spd_xy*60}\n\n\nRESTORE_GCODE_STATE NAME=clean_nozzle\nstatus_ready\n{% else %}\n\n\n{ action_raise_error(\"Please home your axes!\") }\nM117 Please home first!\n\n{% endif %}",
    "description": "G-Code macro",
    "variable_location_bucket_rear": "False",
    "variable_enable_purge": "True",
    "variable_purge_len": "20",
    "variable_purge_spd": "8",
    "variable_purge_ret_sped": "20",
    "variable_purge_temp_min": "201",
    "variable_purge_ret": "25",
    "variable_ooze_dwell": "4",
    "variable_brush_top": "8",
    "variable_clearance_z": "15",
    "variable_wipe_qty": "10",
    "variable_prep_spd_xy": "200",
    "variable_prep_spd_z": "25",
    "variable_wipe_spd_xy": "300",
    "variable_brush_start": "228.2",
    "variable_brush_width": "32.5",
    "variable_brush_front": "302",
    "variable_brush_depth": "3",
    "variable_bucket_width": "30",
    "variable_bucket_start": "265"
  },
  "gcode_macro m600": {
    "gcode": "\n{% set X = params.X|default(230)|float %}\n{% set Y = params.Y|default(0)|float %}\n{% set Z = params.Z|default(20)|float %}\n{% set E = params.E|default(1)|float %}\nSAVE_GCODE_STATE NAME=M600_state\nSAVE_GCODE_STATE NAME=PAUSE_state\nBASE_PAUSE\nG91\nG1 E-{E} F2100\nG1 Z{Z}\nG90\nG1 X{X} Y{Y} F6000\nG91\nG1 E-100 F500\nRESTORE_GCODE_STATE NAME=M600_state",
    "description": "G-Code macro"
  },
  "gcode_macro m602": {
    "gcode": "\n{% set E = params.E|default(1)|float %}\nG91\nG1 E{E} F2100\nG90\nRESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1\nBASE_RESUME",
    "description": "G-Code macro"
  },
  "gcode_macro load_filament": {
    "gcode": "\n{% set E = params.E|default(100)|float %}\nSAVE_GCODE_STATE NAME=LOADFILA_state\nG91\nG1 E{E} F500\nG1 E-1 F2100\nRESTORE_GCODE_STATE NAME=LOADFILA_state",
    "description": "G-Code macro"
  },
  "dotstar case_dotstars": {
    "data_pin": "PD15",
    "clock_pin": "PB11",
    "chain_count": 1,
    "initial_red": 0,
    "initial_green": 0,
    "initial_blue": 0,
    "initial_white": 0
  },
  "neopixel sb_leds": {
    "pin": "PB0",
    "chain_count": 3,
    "color_order": [
      "GRBW"
    ],
    "initial_red": 0,
    "initial_green": 0,
    "initial_blue": 0,
    "initial_white": 0
  },
  "gcode_macro _sb_vars": {
    "gcode": "",
    "description": "G-Code macro",
    "variable_colors": "{\n'logo': {\n'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},\n'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},\n'heating': {'r': 0.4, 'g': 0.0, 'b': 0.4, 'w': 0.0},\n'homing': {'r': 0.0, 'g': 0.8, 'b': 0.2, 'w': 0.0},\n'leveling': {'r': 0.0, 'g': 0.4, 'b': 0.4, 'w': 0.0},\n'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'standby': {'r': 0.16, 'g': 0.15, 'b': 0.16, 'w': 00},\n},\n'nozzle': {\n'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},\n'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},\n'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},\n},\n'thermal': {\n'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},\n'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}\n}\n}",
    "variable_logo_led_name": "\"sb_leds\"",
    "variable_logo_idx": "\"1\"",
    "variable_nozzle_led_name": "\"sb_leds\"",
    "variable_nozzle_idx": "\"2,3\"",
    "variable_thermal_config": "{\n'extruder': {\n'cool_temp': 40,\n'leds': 'logo',\n},\n'heater_bed': {\n'cool_temp': 40,\n'leds': 'nozzle',\n},\n}"
  },
  "gcode_macro _set_sb_leds": {
    "gcode": "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = params.LED|string %}\n{% set idx = (params.IDX|string).split(',') %}\n{% set transmit_last = params.TRANSMIT|default(1) %}\n\n{% for led_index in idx %}\n{% set transmit=transmit_last if loop.last else 0 %}\nset_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}\n{% endfor %}",
    "description": "G-Code macro"
  },
  "gcode_macro _set_sb_leds_by_name": {
    "gcode": "\n{% set leds_name = params.LEDS %}\n{% set color_name = params.COLOR %}\n{% set color = printer[\"gcode_macro _sb_vars\"].colors[leds_name][color_name] %}\n{% set led = printer[\"gcode_macro _sb_vars\"][leds_name + \"_led_name\"] %}\n{% set idx = printer[\"gcode_macro _sb_vars\"][leds_name + \"_idx\"] %}\n{% set transmit = params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx=\"{idx}\" transmit={transmit}",
    "description": "G-Code macro"
  },
  "gcode_macro _set_logo_leds": {
    "gcode": "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer[\"gcode_macro _sb_vars\"].logo_led_name %}\n{% set idx = printer[\"gcode_macro _sb_vars\"].logo_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx=\"{idx}\" transmit={transmit}",
    "description": "G-Code macro"
  },
  "gcode_macro _set_nozzle_leds": {
    "gcode": "\n{% set red = params.RED|default(0)|float %}\n{% set green = params.GREEN|default(0)|float %}\n{% set blue = params.BLUE|default(0)|float %}\n{% set white = params.WHITE|default(0)|float %}\n{% set led = printer[\"gcode_macro _sb_vars\"].nozzle_led_name %}\n{% set idx = printer[\"gcode_macro _sb_vars\"].nozzle_idx %}\n{% set transmit=params.TRANSMIT|default(1) %}\n\n_set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx=\"{idx}\" transmit={transmit}",
    "description": "G-Code macro"
  },
  "gcode_macro set_logo_leds_off": {
    "gcode": "\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}",
    "description": "G-Code macro"
  },
  "gcode_macro set_nozzle_leds_on": {
    "gcode": "\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds=\"nozzle\" color=\"on\" transmit={transmit}",
    "description": "G-Code macro"
  },
  "gcode_macro set_nozzle_leds_off": {
    "gcode": "\n{% set transmit=params.TRANSMIT|default(1) %}\n_set_sb_leds_by_name leds=\"nozzle\" color=\"off\" transmit={transmit}",
    "description": "G-Code macro"
  },
  "gcode_macro status_off": {
    "gcode": "\nset_logo_leds_off transmit=0\nset_nozzle_leds_off",
    "description": "G-Code macro"
  },
  "gcode_macro status_ready": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"standby\" transmit=0\n_set_sb_leds_by_name leds=\"nozzle\" color=\"standby\" transmit=1",
    "description": "G-Code macro"
  },
  "gcode_macro status_busy": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"busy\" transmit=0\nset_nozzle_leds_on",
    "description": "G-Code macro"
  },
  "gcode_macro status_heating": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"heating\" transmit=0\n_set_sb_leds_by_name leds=\"nozzle\" color=\"heating\" transmit=1",
    "description": "G-Code macro"
  },
  "gcode_macro status_leveling": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"leveling\" transmit=0\nset_nozzle_leds_on",
    "description": "G-Code macro"
  },
  "gcode_macro status_homing": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"homing\" transmit=0\nset_nozzle_leds_on",
    "description": "G-Code macro"
  },
  "gcode_macro status_cleaning": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"cleaning\" transmit=0\nset_nozzle_leds_on",
    "description": "G-Code macro"
  },
  "gcode_macro status_meshing": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"meshing\" transmit=0\nset_nozzle_leds_on",
    "description": "G-Code macro"
  },
  "gcode_macro status_calibrating_z": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"calibrating_z\" transmit=0\nset_nozzle_leds_on",
    "description": "G-Code macro"
  },
  "gcode_macro status_printing": {
    "gcode": "\n_set_sb_leds_by_name leds=\"logo\" color=\"printing\" transmit=0\nset_nozzle_leds_on",
    "description": "G-Code macro"
  },
  "delayed_gcode _set_startup_led": {
    "gcode": "\nstatus_ready",
    "initial_duration": 2
  },
  "gcode_macro _bedfanvars": {
    "gcode": "",
    "description": "G-Code macro",
    "variable_threshold": "100",
    "variable_fast": "0.8",
    "variable_slow": "0.15"
  },
  "fan_generic bedfans": {
    "max_power": 1,
    "kick_start_time": 0.5,
    "off_below": 0,
    "cycle_time": 0.01,
    "hardware_pwm": false,
    "shutdown_speed": 0,
    "pin": "PD14"
  },
  "gcode_macro bedfansslow": {
    "gcode": "\n\n{% set SLOW = printer[\"gcode_macro _BEDFANVARS\"].slow|float %}\n\nSET_FAN_SPEED FAN=BedFans SPEED={SLOW}",
    "description": "G-Code macro"
  },
  "gcode_macro bedfansfast": {
    "gcode": "\n\n{% set FAST = printer[\"gcode_macro _BEDFANVARS\"].fast|float %}\n\nSET_FAN_SPEED FAN=BedFans SPEED={FAST}",
    "description": "G-Code macro"
  },
  "gcode_macro bedfansoff": {
    "gcode": "\nSET_FAN_SPEED FAN=BedFans SPEED=0",
    "description": "G-Code macro"
  },
  "gcode_macro set_heater_temperature": {
    "gcode": "\n\n{% set HEATER = params.HEATER|default(\"None\") %}\n{% set TARGET = params.TARGET|default(0)|int %}\n\n{% set THRESHOLD = printer[\"gcode_macro _BEDFANVARS\"].threshold|int %}\n\n{% if HEATER|lower == \"extruder\" %}\nM104 S{TARGET}\n{% elif HEATER|lower == \"heater_bed\" %}\nM99140 S{TARGET}\n{% else %}\n{action_respond_info(\"Heater %s not supported\" % HEATER)}\n{% endif %}\n\n\n{% if HEATER|lower == \"heater_bed\" %}\n{% if TARGET >= THRESHOLD %}\nBEDFANSSLOW\nUPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1\n{% else %}\nBEDFANSOFF\nUPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0\n{% endif %}\n{% endif %}",
    "rename_existing": "_SET_HEATER_TEMPERATURE",
    "description": "G-Code macro"
  },
  "gcode_macro m190": {
    "gcode": "\n\n{% set S = params.S|int %}\n\n{% set THRESHOLD = printer[\"gcode_macro _BEDFANVARS\"].threshold|int %}\n\n{% if S >= THRESHOLD %}\nBEDFANSSLOW\n{% else %}\nBEDFANSOFF\n{% endif %}\n\nM140 {% for p in params\n%}{'%s%s' % (p, params[p])}{%\nendfor %}\n\n{% if S != 0 %}\nTEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}\n{% endif %}\n\n\n{% if S >= THRESHOLD %}\nBEDFANSFAST\n{% endif %}",
    "rename_existing": "M99190",
    "description": "G-Code macro"
  },
  "gcode_macro m140": {
    "gcode": "\n\n{% set S = params.S|float %}\n\nSET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}",
    "rename_existing": "M99140",
    "description": "G-Code macro"
  },
  "gcode_macro turn_off_heaters": {
    "gcode": "\nBEDFANSOFF\n_TURN_OFF_HEATERS",
    "rename_existing": "_TURN_OFF_HEATERS",
    "description": "G-Code macro"
  },
  "delayed_gcode bedfanloop": {
    "gcode": "\n\n{% set THRESHOLD = printer[\"gcode_macro _BEDFANVARS\"].threshold|int %}\n\n{% if printer.heater_bed.target >= THRESHOLD %}\n{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}\nBEDFANSFAST\n{% else %}\nUPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5\n{% endif %}\n{% endif %}",
    "initial_duration": 0
  },
  "probe": {
    "z_offset": -0.415,
    "deactivate_on_each_sample": true,
    "activate_gcode": "\n{% set PROBE_TEMP = 150 %}\n{% set MAX_TEMP = PROBE_TEMP + 5 %}\n{% set ACTUAL_TEMP = printer.extruder.temperature %}\n{% set TARGET_TEMP = printer.extruder.target %}\n\n{% if TARGET_TEMP > PROBE_TEMP %}\n{ action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }\nM109 S{ PROBE_TEMP }\n{% else %}\n\n{% if ACTUAL_TEMP > MAX_TEMP %}\n{ action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }\nTEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }\n{% endif %}\n{% endif %}",
    "deactivate_gcode": "",
    "pin": "^PG11",
    "speed": 10,
    "lift_speed": 20,
    "x_offset": 0,
    "y_offset": 0,
    "samples": 3,
    "sample_retract_dist": 2,
    "samples_result": "median",
    "samples_tolerance": 0.0125,
    "samples_tolerance_retries": 10
  },
  "gcode_macro print_start": {
    "gcode": "\n{% set BED = params.BED|default(60)|float %}\n{% set EXTRUDER = params.EXTRUDER|default(220)|float %}\n{% set NOZZLE_DIA = printer['configfile'].config[\"extruder\"][\"nozzle_diameter\"]|float %}\n\nSETUP_KAMP_MESHING DISPLAY_PARAMETERS=0 LED_ENABLE=1 FUZZ_ENABLE=0\nSETUP_VORON_PURGE DISPLAY_PARAMETERS=0 ADAPTIVE_ENABLE=1 TIP_DISTANCE=25\n\n\nL_ON\nstatus_heating\nM104 S150\nM140 S{BED}\nM109 S150\nM190 S{BED}\nSET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=target_extruder_tmp VALUE={EXTRUDER}\n\n\nBED_MESH_CLEAR\n\n\nG28\n\nCLEAN_NOZZLE\n\n\n\n\nG28 Z\n\nQUAD_GANTRY_LEVEL\nG28\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\n\nG90\nG1 X10 Y1 Z15 F18000\nM109 S{EXTRUDER}\nstatus_printing\nM117 $MR$:$printer_name|G32 and Bedmesh completed\nVORON_PURGE",
    "description": "G-Code macro",
    "variable_target_extruder_tmp": "0"
  },
  "gcode_macro m900": {
    "gcode": "\n\n{% set pa = params.K|float %}\n\nSET_PRESSURE_ADVANCE ADVANCE={pa}",
    "description": "G-Code macro"
  },
  "bed_screws": {
    "screw1": [
      100,
      50
    ],
    "screw1_name": "screw at 100.000,50.000",
    "screw2": [
      100,
      150
    ],
    "screw2_name": "screw at 100.000,150.000",
    "screw3": [
      150,
      100
    ],
    "screw3_name": "screw at 150.000,100.000",
    "speed": 50,
    "probe_speed": 5,
    "horizontal_move_z": 5,
    "probe_height": 0
  },
  "screws_tilt_adjust": {
    "screw1": [
      5,
      30
    ],
    "screw1_name": "front left screw",
    "screw2": [
      155,
      30
    ],
    "screw2_name": "front right screw",
    "screw3": [
      155,
      190
    ],
    "screw3_name": "rear right screw",
    "screw4": [
      5,
      190
    ],
    "screw4_name": "rear left screw",
    "screw_thread": "CW-M3",
    "horizontal_move_z": 10,
    "speed": 50
  },
  "autotune_tmc stepper_x": {
    "stealth_and_spread": false,
    "stealth": false,
    "motor": "omc-17hm19-2004s",
    "extra_hysteresis": 0,
    "tbl": 2,
    "toff": 0,
    "sgt": 1,
    "sg4_thrs": 10,
    "voltage": 24
  },
  "autotune_tmc stepper_y": {
    "stealth_and_spread": false,
    "stealth": false,
    "motor": "omc-17hm19-2004s",
    "extra_hysteresis": 0,
    "tbl": 2,
    "toff": 0,
    "sgt": 1,
    "sg4_thrs": 10,
    "voltage": 24
  },
  "autotune_tmc stepper_z": {
    "stealth_and_spread": false,
    "stealth": true,
    "motor": "omc-17hs19-2004s1",
    "extra_hysteresis": 0,
    "tbl": 2,
    "toff": 0,
    "sgt": 1,
    "sg4_thrs": 10,
    "voltage": 24
  },
  "autotune_tmc stepper_z1": {
    "stealth_and_spread": false,
    "stealth": true,
    "motor": "omc-17hs19-2004s1",
    "extra_hysteresis": 0,
    "tbl": 2,
    "toff": 0,
    "sgt": 1,
    "sg4_thrs": 10,
    "voltage": 24
  },
  "autotune_tmc stepper_z2": {
    "stealth_and_spread": false,
    "stealth": true,
    "motor": "omc-17hs19-2004s1",
    "extra_hysteresis": 0,
    "tbl": 2,
    "toff": 0,
    "sgt": 1,
    "sg4_thrs": 10,
    "voltage": 24
  },
  "autotune_tmc stepper_z3": {
    "stealth_and_spread": false,
    "stealth": true,
    "motor": "omc-17hs19-2004s1",
    "extra_hysteresis": 0,
    "tbl": 2,
    "toff": 0,
    "sgt": 1,
    "sg4_thrs": 10,
    "voltage": 24
  },
  "autotune_tmc extruder": {
    "stealth_and_spread": false,
    "stealth": true,
    "motor": "bondtech-42H025H-0704A-005",
    "extra_hysteresis": 0,
    "tbl": 2,
    "toff": 0,
    "sgt": 1,
    "sg4_thrs": 10,
    "voltage": 24
  },
  "gcode_macro mr_notify": {
    "gcode": "\n{% set msg = \"$MR$:\" ~ (params.TITLE ~ \"|\" if 'TITLE' in params|upper else \"\") ~ params.MESSAGE %}\n\n{% if 'MESSAGE' in params|upper %}\n{ action_respond_info(msg) }\n{% else %}\n{ action_raise_error('Must provide MESSAGE parameter') }\n{% endif %}",
    "description": "Allows you to send a custom notification via Mobileraker without using the M117 command"
  },
  "gcode_shell_command plot_graph": {
    "command": "bash /home/pi/klipper_config/frix/plot_graphs.sh",
    "timeout": 300,
    "verbose": true
  },
  "gcode_macro axes_shaper_calibration": {
    "gcode": "\n{% set verbose = params.VERBOSE|default(true) %}\n\nTEST_RESONANCES AXIS=X\nM400\nTEST_RESONANCES AXIS=Y\nM400\n\n{% if verbose %}\nRESPOND MSG=\"Graphs generation... Please wait a minute or two and look in the configured folder.\"\n{% endif %}\nRUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER",
    "description": "Run standard input shaper test for all axes"
  },
  "gcode_macro belts_shaper_calibration": {
    "gcode": "\n{% set verbose = params.VERBOSE|default(true) %}\n\nTEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b\nM400\nTEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a\nM400\n\n{% if verbose %}\nRESPOND MSG=\"Graphs generation... Please wait a minute or two and look in the configured folder.\"\n{% endif %}\nRUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELTS",
    "description": "Run custom demi-axe test to analyze belts on CoreXY printers"
  },
  "gcode_macro vibrations_calibration": {
    "gcode": "\n\n\n\n{% set size = params.SIZE|default(60)|int %}\n{% set direction = params.DIRECTION|default('XY') %}\n{% set z_height = params.Z_HEIGHT|default(20)|int %}\n{% set verbose = params.VERBOSE|default(true) %}\n\n{% set min_speed = params.MIN_SPEED|default(20)|int * 60 %}\n{% set max_speed = params.MAX_SPEED|default(200)|int * 60 %}\n{% set speed_increment = params.SPEED_INCREMENT|default(2)|int * 60 %}\n{% set feedrate_travel = params.TRAVEL_SPEED|default(200)|int * 60 %}\n\n{% set accel_chip = params.ACCEL_CHIP|default(\"adxl345\") %}\n\n\n\n\n{% set mid_x = printer.toolhead.axis_maximum.x|float / 2 %}\n{% set mid_y = printer.toolhead.axis_maximum.y|float / 2 %}\n\n{% set direction_factor = {\n'XY'  : {\n'start' : {'x': -0.5, 'y': -0.5 },\n'move_factors' : {\n'0' : {'x': 0.5, 'y': -0.5, 'z': 0.0 },\n'1' : {'x': 0.5, 'y': 0.5, 'z': 0.0 },\n'2' : {'x': -0.5, 'y': 0.5, 'z': 0.0 },\n'3' : {'x': -0.5, 'y': -0.5, 'z': 0.0 }\n}\n},\n'AB' : {\n'start' : {'x': 0.0, 'y': 0.0 },\n'move_factors' : {\n'0' : {'x': 0.5, 'y': -0.5, 'z': 0.0 },\n'1' : {'x': -0.5, 'y': 0.5, 'z': 0.0 },\n'2' : {'x': 0.0, 'y': 0.0, 'z': 0.0 },\n'3' : {'x': 0.5, 'y': 0.5, 'z': 0.0 },\n'4' : {'x': -0.5, 'y': -0.5, 'z': 0.0 },\n'5' : {'x': 0.0, 'y': 0.0, 'z': 0.0 }\n}\n},\n'ABXY' : {\n'start' : {'x': -0.5, 'y': 0.5 },\n'move_factors' : {\n'0' : {'x': -0.5, 'y': -0.5, 'z': 0.0 },\n'1' : {'x': 0.5, 'y': -0.5, 'z': 0.0 },\n'2' : {'x': -0.5, 'y': 0.5, 'z': 0.0 },\n'3' : {'x': 0.5, 'y': 0.5, 'z': 0.0 },\n'4' : {'x': -0.5, 'y': -0.5, 'z': 0.0 },\n'5' : {'x': -0.5, 'y': 0.5, 'z': 0.0 }\n}\n},\n'B'  : {\n'start' : {'x': 0.5, 'y': 0.5 },\n'move_factors' : {\n'0' : {'x': -0.5, 'y': -0.5, 'z': 0.0 },\n'1' : {'x': 0.5, 'y': 0.5, 'z': 0.0 }\n}\n},\n'A'  : {\n'start' : {'x': -0.5, 'y': 0.5 },\n'move_factors' : {\n'0' : {'x': 0.5, 'y': -0.5, 'z': 0.0 },\n'1' : {'x': -0.5, 'y': 0.5, 'z': 0.0 }\n}\n},\n'X'  : {\n'start' : {'x': -0.5, 'y': 0.0 },\n'move_factors' : {\n'0' : {'x': 0.5, 'y': 0.0, 'z': 0.0 },\n'1' : {'x': -0.5, 'y': 0.0, 'z': 0.0 }\n}\n},\n'Y'  : {\n'start' : {'x': 0.0, 'y': 0.5 },\n'move_factors' : {\n'0' : {'x': 0.0, 'y': -0.5, 'z': 0.0 },\n'1' : {'x': 0.0, 'y': 0.5, 'z': 0.0 }\n}\n},\n'Z'  : {\n'start' : {'x': 0.0, 'y': 0.0 },\n'move_factors' : {\n'0' : {'x': 0.0, 'y': 0.0, 'z': 1.0 },\n'1' : {'x': 0.0, 'y': 0.0, 'z': 0.0 }\n}\n}\n}\n%}\n\n\n\n\n{% if not 'xyz' in printer.toolhead.homed_axes %}\n{ action_raise_error(\"Must Home printer first!\") }\n{% endif %}\n\n{% if (size / (max_speed / 60)) < 0.25 %}\n{ action_raise_error(\"SIZE is too small for this MAX_SPEED. Increase SIZE or decrease MAX_SPEED!\") }\n{% endif %}\n\n{% if not (direction in direction_factor) %}\n{ action_raise_error(\"DIRECTION is not valid. Only XY, AB, ABXY, A, B, X, Y or Z is allowed!\") }\n{% endif %}\n\n{action_respond_info(\"\")}\n{action_respond_info(\"Starting speed and vibration calibration\")}\n{action_respond_info(\"This operation can not be interrupted by normal means. Hit the \\\"emergency stop\\\" button to stop it if needed\")}\n{action_respond_info(\"\")}\n\nSAVE_GCODE_STATE NAME=STATE_VIBRATIONS_CALIBRATION\n\nG90\n\n\nG1 Z{z_height}\nG1 X{mid_x + (size * direction_factor[direction].start.x) } Y{mid_y + (size * direction_factor[direction].start.y)} F{feedrate_travel}\n\n\n{% for curr_speed in range(min_speed, max_speed + speed_increment) %}\n{% if (curr_speed - min_speed) % speed_increment == 0 %}\n{% if verbose %}\nRESPOND MSG=\"Current speed: {(curr_speed / 60)|int} mm/s\"\n{% endif %}\n\nACCELEROMETER_MEASURE CHIP={accel_chip}\n{% for key, factor in direction_factor[direction].move_factors|dictsort %}\nG1 X{mid_x + (size * factor.x) } Y{mid_y + (size * factor.y)} Z{z_height + (size * factor.z)} F{curr_speed}\n{% endfor %}\nACCELEROMETER_MEASURE CHIP={accel_chip} NAME=sp{(curr_speed / 60)|int}n1\n\nG4 P300\nM400\n{% endif %}\n{% endfor %}\n\n{% if verbose %}\nRESPOND MSG=\"Graphs generation... Please wait a minute or two and look in the configured folder.\"\n{% endif %}\nRUN_SHELL_COMMAND CMD=plot_graph PARAMS=\"VIBRATIONS {direction}\"\n\nRESTORE_GCODE_STATE NAME=STATE_VIBRATIONS_CALIBRATION",
    "description": "G-Code macro"
  },
  "adxl345": {
    "axes_map": [
      "x",
      "y",
      "z"
    ],
    "rate": 3200,
    "cs_pin": "rpi:None",
    "spi_speed": 5000000
  },
  "resonance_tester": {
    "move_speed": 50,
    "min_freq": 5,
    "max_freq": 133.33333333333334,
    "accel_per_hz": 75,
    "hz_per_sec": 1,
    "probe_points": [
      [
        150,
        150,
        20
      ]
    ],
    "accel_chip": "adxl345"
  },
  "gcode_arcs": {
    "resolution": 0.1
  },
  "input_shaper": {
    "shaper_type": "mzv",
    "shaper_type_x": "mzv",
    "damping_ratio_x": 0.1,
    "shaper_freq_x": 52.2,
    "shaper_type_y": "mzv",
    "damping_ratio_y": 0.1,
    "shaper_freq_y": 39.8
  },
  "tmc2209 stepper_x": {
    "uart_pin": "PC4",
    "uart_address": 0,
    "run_current": 0.9,
    "hold_current": 2,
    "sense_resistor": 0.11,
    "interpolate": false,
    "stealthchop_threshold": 0,
    "driver_multistep_filt": true,
    "driver_toff": 3,
    "driver_hstrt": 5,
    "driver_hend": 0,
    "driver_tbl": 2,
    "driver_iholddelay": 8,
    "driver_pwm_ofs": 36,
    "driver_pwm_grad": 14,
    "driver_pwm_freq": 1,
    "driver_pwm_autoscale": true,
    "driver_pwm_autograd": true,
    "driver_pwm_reg": 8,
    "driver_pwm_lim": 12,
    "driver_tpowerdown": 20,
    "driver_sgthrs": 0
  },
  "stepper_x": {
    "microsteps": 32,
    "step_pin": "PF13",
    "dir_pin": "!PF12",
    "rotation_distance": 40,
    "full_steps_per_rotation": 400,
    "gear_ratio": [],
    "enable_pin": "!PF14",
    "endstop_pin": "!PG6",
    "position_endstop": 300,
    "position_min": -1,
    "position_max": 300,
    "homing_speed": 75,
    "second_homing_speed": 15,
    "homing_retract_speed": 75,
    "homing_retract_dist": 5,
    "homing_positive_dir": true
  },
  "tmc2209 stepper_y": {
    "uart_pin": "PD11",
    "uart_address": 0,
    "run_current": 0.9,
    "hold_current": 2,
    "sense_resistor": 0.11,
    "interpolate": false,
    "stealthchop_threshold": 0,
    "driver_multistep_filt": true,
    "driver_toff": 3,
    "driver_hstrt": 5,
    "driver_hend": 0,
    "driver_tbl": 2,
    "driver_iholddelay": 8,
    "driver_pwm_ofs": 36,
    "driver_pwm_grad": 14,
    "driver_pwm_freq": 1,
    "driver_pwm_autoscale": true,
    "driver_pwm_autograd": true,
    "driver_pwm_reg": 8,
    "driver_pwm_lim": 12,
    "driver_tpowerdown": 20,
    "driver_sgthrs": 0
  },
  "stepper_y": {
    "microsteps": 32,
    "step_pin": "PG0",
    "dir_pin": "!PG1",
    "rotation_distance": 40,
    "full_steps_per_rotation": 400,
    "gear_ratio": [],
    "enable_pin": "!PF15",
    "endstop_pin": "PG9",
    "position_endstop": 305,
    "position_min": 0,
    "position_max": 305,
    "homing_speed": 75,
    "second_homing_speed": 15,
    "homing_retract_speed": 75,
    "homing_retract_dist": 5,
    "homing_positive_dir": true
  },
  "tmc2209 stepper_z": {
    "uart_pin": "PF2",
    "uart_address": 0,
    "run_current": 0.9,
    "hold_current": 2,
    "sense_resistor": 0.11,
    "interpolate": false,
    "stealthchop_threshold": 0,
    "driver_multistep_filt": true,
    "driver_toff": 3,
    "driver_hstrt": 5,
    "driver_hend": 0,
    "driver_tbl": 2,
    "driver_iholddelay": 8,
    "driver_pwm_ofs": 36,
    "driver_pwm_grad": 14,
    "driver_pwm_freq": 1,
    "driver_pwm_autoscale": true,
    "driver_pwm_autograd": true,
    "driver_pwm_reg": 8,
    "driver_pwm_lim": 12,
    "driver_tpowerdown": 20,
    "driver_sgthrs": 0
  },
  "stepper_z": {
    "microsteps": 128,
    "step_pin": "PF9",
    "dir_pin": "!PF10",
    "rotation_distance": 40,
    "full_steps_per_rotation": 200,
    "gear_ratio": [
      [
        80,
        16
      ]
    ],
    "enable_pin": "!PG2",
    "endstop_pin": "probe:z_virtual_endstop",
    "position_min": -2.5,
    "position_max": 265,
    "homing_speed": 15,
    "second_homing_speed": 1,
    "homing_retract_speed": 15,
    "homing_retract_dist": 2,
    "homing_positive_dir": false
  },
  "tmc2209 stepper_z1": {
    "uart_pin": "PE4",
    "uart_address": 0,
    "run_current": 0.9,
    "hold_current": 2,
    "sense_resistor": 0.11,
    "interpolate": false,
    "stealthchop_threshold": 0,
    "driver_multistep_filt": true,
    "driver_toff": 3,
    "driver_hstrt": 5,
    "driver_hend": 0,
    "driver_tbl": 2,
    "driver_iholddelay": 8,
    "driver_pwm_ofs": 36,
    "driver_pwm_grad": 14,
    "driver_pwm_freq": 1,
    "driver_pwm_autoscale": true,
    "driver_pwm_autograd": true,
    "driver_pwm_reg": 8,
    "driver_pwm_lim": 12,
    "driver_tpowerdown": 20,
    "driver_sgthrs": 0
  },
  "stepper_z1": {
    "microsteps": 128,
    "step_pin": "PC13",
    "dir_pin": "PF0",
    "rotation_distance": 40,
    "full_steps_per_rotation": 200,
    "gear_ratio": [
      [
        80,
        16
      ]
    ],
    "enable_pin": "!PF1"
  },
  "tmc2209 stepper_z2": {
    "uart_pin": "PE1",
    "uart_address": 0,
    "run_current": 0.9,
    "hold_current": 2,
    "sense_resistor": 0.11,
    "interpolate": false,
    "stealthchop_threshold": 0,
    "driver_multistep_filt": true,
    "driver_toff": 3,
    "driver_hstrt": 5,
    "driver_hend": 0,
    "driver_tbl": 2,
    "driver_iholddelay": 8,
    "driver_pwm_ofs": 36,
    "driver_pwm_grad": 14,
    "driver_pwm_freq": 1,
    "driver_pwm_autoscale": true,
    "driver_pwm_autograd": true,
    "driver_pwm_reg": 8,
    "driver_pwm_lim": 12,
    "driver_tpowerdown": 20,
    "driver_sgthrs": 0
  },
  "stepper_z2": {
    "microsteps": 128,
    "step_pin": "PE2",
    "dir_pin": "!PE3",
    "rotation_distance": 40,
    "full_steps_per_rotation": 200,
    "gear_ratio": [
      [
        80,
        16
      ]
    ],
    "enable_pin": "!PD4"
  },
  "tmc2209 stepper_z3": {
    "uart_pin": "PD3",
    "uart_address": 0,
    "run_current": 0.9,
    "hold_current": 2,
    "sense_resistor": 0.11,
    "interpolate": false,
    "stealthchop_threshold": 0,
    "driver_multistep_filt": true,
    "driver_toff": 3,
    "driver_hstrt": 5,
    "driver_hend": 0,
    "driver_tbl": 2,
    "driver_iholddelay": 8,
    "driver_pwm_ofs": 36,
    "driver_pwm_grad": 14,
    "driver_pwm_freq": 1,
    "driver_pwm_autoscale": true,
    "driver_pwm_autograd": true,
    "driver_pwm_reg": 8,
    "driver_pwm_lim": 12,
    "driver_tpowerdown": 20,
    "driver_sgthrs": 0
  },
  "stepper_z3": {
    "microsteps": 128,
    "step_pin": "PE6",
    "dir_pin": "PA14",
    "rotation_distance": 40,
    "full_steps_per_rotation": 200,
    "gear_ratio": [
      [
        80,
        16
      ]
    ],
    "enable_pin": "!PE0"
  },
  "tmc2209 extruder": {
    "uart_pin": "PC7",
    "uart_address": 0,
    "run_current": 0.3,
    "hold_current": 2,
    "sense_resistor": 0.11,
    "interpolate": false,
    "stealthchop_threshold": 0,
    "driver_multistep_filt": true,
    "driver_toff": 3,
    "driver_hstrt": 5,
    "driver_hend": 0,
    "driver_tbl": 2,
    "driver_iholddelay": 8,
    "driver_pwm_ofs": 36,
    "driver_pwm_grad": 14,
    "driver_pwm_freq": 1,
    "driver_pwm_autoscale": true,
    "driver_pwm_autograd": true,
    "driver_pwm_reg": 8,
    "driver_pwm_lim": 12,
    "driver_tpowerdown": 20,
    "driver_sgthrs": 0
  },
  "extruder": {
    "microsteps": 64,
    "sensor_type": "ATC Semitec 104GT-2",
    "pullup_resistor": 4700,
    "inline_resistor": 0,
    "sensor_pin": "PF4",
    "min_temp": 10,
    "max_temp": 300,
    "min_extrude_temp": 140,
    "max_power": 1,
    "smooth_time": 0.5,
    "control": "pid",
    "pid_kp": 31.336,
    "pid_ki": 2.517,
    "pid_kd": 97.533,
    "heater_pin": "PA2",
    "pwm_cycle_time": 0.1,
    "nozzle_diameter": 0.4,
    "filament_diameter": 1.75,
    "max_extrude_cross_section": 50,
    "max_extrude_only_velocity": 133.04054018457214,
    "max_extrude_only_accel": 1862.5675625840101,
    "max_extrude_only_distance": 200,
    "instantaneous_corner_velocity": 1,
    "step_pin": "PG4",
    "pressure_advance": 0.055,
    "pressure_advance_smooth_time": 0.04,
    "dir_pin": "!PC1",
    "rotation_distance": 8,
    "full_steps_per_rotation": 200,
    "gear_ratio": [],
    "enable_pin": "!PA0"
  },
  "heater_bed": {
    "sensor_type": "NTC 100K MGB18-104F39050L32",
    "pullup_resistor": 4700,
    "inline_resistor": 0,
    "sensor_pin": "PF3",
    "min_temp": 15,
    "max_temp": 120,
    "min_extrude_temp": 170,
    "max_power": 0.6,
    "smooth_time": 1,
    "control": "pid",
    "pid_kp": 40.598,
    "pid_ki": 1.395,
    "pid_kd": 295.352,
    "heater_pin": "PD13",
    "pwm_cycle_time": 0.1
  },
  "verify_heater heater_bed": {
    "hysteresis": 5,
    "max_error": 120,
    "heating_gain": 2,
    "check_gain_time": 60
  },
  "heater_fan hotend_fan": {
    "heater": [
      "extruder"
    ],
    "heater_temp": 50,
    "max_power": 1,
    "kick_start_time": 0.5,
    "off_below": 0,
    "cycle_time": 0.01,
    "hardware_pwm": false,
    "shutdown_speed": 1,
    "pin": "PE5",
    "fan_speed": 1
  },
  "fan": {
    "max_power": 1,
    "kick_start_time": 0.5,
    "off_below": 0.1,
    "cycle_time": 0.01,
    "hardware_pwm": false,
    "shutdown_speed": 0,
    "pin": "PA8"
  },
  "controller_fan skirt fan": {
    "max_power": 1,
    "kick_start_time": 0.5,
    "off_below": 0,
    "cycle_time": 0.01,
    "hardware_pwm": false,
    "shutdown_speed": 0,
    "pin": "PB10",
    "fan_speed": 1,
    "idle_speed": 1,
    "idle_timeout": 30,
    "heater": [
      "heater_bed"
    ]
  },
  "heater_fan exhaust_fan": {
    "heater": [
      "heater_bed"
    ],
    "heater_temp": 60,
    "max_power": 1,
    "kick_start_time": 0.5,
    "off_below": 0,
    "cycle_time": 0.01,
    "hardware_pwm": false,
    "shutdown_speed": 0,
    "pin": "PD12",
    "fan_speed": 1
  },
  "led caselight": {
    "cycle_time": 0.01,
    "hardware_pwm": false,
    "white_pin": "PA3",
    "initial_red": 0,
    "initial_green": 0,
    "initial_blue": 0,
    "initial_white": 0
  },
  "idle_timeout": {
    "timeout": 1800,
    "gcode": "\nL_OFF\nstatus_off\nTURN_OFF_HEATERS\nM84"
  },
  "quad_gantry_level": {
    "retries": 10,
    "retry_tolerance": 0.0075,
    "max_adjust": 10,
    "horizontal_move_z": 5,
    "points": [
      [
        25,
        25
      ],
      [
        25,
        275
      ],
      [
        275,
        275
      ],
      [
        275,
        25
      ]
    ],
    "speed": 400,
    "gantry_corners": [
      [
        -60,
        -10
      ],
      [
        360,
        370
      ]
    ]
  },
  "bed_mesh": {
    "probe_count": [
      6,
      6
    ],
    "mesh_min": [
      25,
      25
    ],
    "mesh_max": [
      275,
      275
    ],
    "mesh_pps": [
      2,
      2
    ],
    "algorithm": "lagrange",
    "bicubic_tension": 0.2,
    "horizontal_move_z": 5,
    "speed": 400,
    "fade_start": 0.6,
    "fade_end": 10,
    "split_delta_z": 0.025,
    "move_check_distance": 5
  },
  "bed_mesh bq-plate": {
    "version": 1,
    "points": [
      [
        -0.035,
        -0.05,
        -0.0375,
        -0.03,
        -0.0075
      ],
      [
        0.0025,
        -0.02,
        -0.0075,
        -0.005,
        -0.005
      ],
      [
        -0.005,
        -0.0325,
        0,
        -0.0075,
        0.015
      ],
      [
        -0.0025,
        -0.01,
        -0.0075,
        -0.015,
        0.02
      ],
      [
        -0.0175,
        -0.0425,
        -0.0275,
        -0.025,
        -0.0025
      ]
    ],
    "min_x": 40,
    "max_x": 260,
    "min_y": 40,
    "max_y": 260,
    "x_count": 5,
    "y_count": 5,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh vw-plate": {
    "version": 1,
    "points": [
      [
        -0.025,
        -0.0325,
        -0.025,
        -0.02375,
        -0.00875
      ],
      [
        0.00875,
        -0.015,
        0.0025,
        0.0025,
        0.01875
      ],
      [
        0,
        -0.0125,
        0,
        0.00375,
        0.02625
      ],
      [
        -0.005,
        -0.005,
        0.0025,
        -0.00125,
        0.01375
      ],
      [
        -0.0125,
        -0.02625,
        -0.0125,
        -0.005,
        0
      ]
    ],
    "min_x": 40,
    "max_x": 260,
    "min_y": 40,
    "max_y": 260,
    "x_count": 5,
    "y_count": 5,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh e-plate": {
    "version": 1,
    "points": [
      [
        -0.06,
        -0.075,
        -0.0675,
        -0.0625,
        -0.0475
      ],
      [
        -0.025,
        -0.0375,
        -0.0175,
        -0.0275,
        -0.015
      ],
      [
        -0.0175,
        -0.015,
        0,
        -0.0125,
        0.0075
      ],
      [
        -0.0125,
        -0.03,
        -0.0225,
        -0.0175,
        -0.0075
      ],
      [
        -0.04,
        -0.0325,
        -0.03,
        -0.0225,
        -0.0325
      ]
    ],
    "min_x": 40,
    "max_x": 260,
    "min_y": 40,
    "max_y": 260,
    "x_count": 5,
    "y_count": 5,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh vw-plate(probe)": {
    "version": 1,
    "points": [
      [
        -0.07125,
        -0.045,
        -0.0275,
        -0.03,
        -0.0525
      ],
      [
        -0.0225,
        -0.0075,
        0.0125,
        0,
        -0.03375
      ],
      [
        -0.0525,
        -0.02625,
        0,
        -0.015,
        -0.03875
      ],
      [
        -0.05125,
        -0.01625,
        0,
        -0.00875,
        -0.03375
      ],
      [
        -0.06625,
        -0.0375,
        -0.0125,
        -0.0225,
        -0.06
      ]
    ],
    "min_x": 40,
    "max_x": 260,
    "min_y": 40,
    "max_y": 260,
    "x_count": 5,
    "y_count": 5,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bq-plate(probe)": {
    "version": 1,
    "points": [
      [
        -0.07,
        -0.0525,
        -0.0225,
        -0.03375,
        -0.0625
      ],
      [
        -0.03875,
        -0.03625,
        -0.0025,
        -0.0075,
        -0.04625
      ],
      [
        -0.055,
        -0.04125,
        0,
        -0.01375,
        -0.0375
      ],
      [
        -0.06625,
        -0.0225,
        -0.005,
        -0.015,
        -0.025
      ],
      [
        -0.085,
        -0.05375,
        -0.02125,
        -0.03125,
        -0.06375
      ]
    ],
    "min_x": 40,
    "max_x": 260,
    "min_y": 40,
    "max_y": 260,
    "x_count": 5,
    "y_count": 5,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh vw-plate (clicky)": {
    "version": 1,
    "points": [
      [
        -0.0475,
        -0.03625,
        -0.02625,
        -0.01625,
        -0.02375,
        -0.02125,
        -0.0325,
        -0.03875
      ],
      [
        -0.0175,
        -0.01,
        -0.0075,
        0,
        -0.00375,
        0,
        -0.00875,
        -0.02625
      ],
      [
        -0.005,
        0.00625,
        0.00875,
        0.01875,
        0.015,
        0.0125,
        0,
        -0.0075
      ],
      [
        -0.01125,
        -0.01,
        -0.00125,
        0.01875,
        0.00875,
        0.00875,
        -0.00125,
        -0.005
      ],
      [
        -0.01875,
        0,
        0.015,
        0.02875,
        0.01625,
        0.0175,
        0.00125,
        0.02875
      ],
      [
        -0.01875,
        -0.00125,
        0.01375,
        0.0275,
        0.01625,
        0.01375,
        -0.00125,
        -0.00375
      ],
      [
        -0.02125,
        -0.00875,
        0.00625,
        0.02125,
        0.015,
        0.0075,
        -0.01125,
        -0.01875
      ],
      [
        -0.02375,
        -0.01375,
        0,
        0.01,
        0.0125,
        0.01125,
        -0.01125,
        -0.02625
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh e-plate (clicky)": {
    "version": 1,
    "points": [
      [
        -0.065,
        -0.055,
        -0.035,
        -0.03,
        -0.04,
        -0.035,
        -0.03875,
        -0.0575
      ],
      [
        -0.025,
        -0.015,
        -0.00625,
        0,
        0.0025,
        -0.00125,
        -0.00625,
        -0.02875
      ],
      [
        -0.01625,
        0.00625,
        0.01125,
        0.02,
        0.02125,
        0.0025,
        -0.00625,
        -0.01625
      ],
      [
        -0.02,
        -0.02125,
        0.005,
        0.02625,
        0.0175,
        0.01375,
        -0.01,
        -0.0175
      ],
      [
        -0.02125,
        0.00625,
        0.02,
        0.0275,
        0.00125,
        0.01375,
        -0.00625,
        -0.01
      ],
      [
        -0.02375,
        -0.01,
        0.01375,
        0.025,
        0.03,
        0.015,
        -0.00125,
        -0.01125
      ],
      [
        -0.02625,
        -0.01125,
        -0.00125,
        0.0175,
        0.0175,
        0.00125,
        -0.0175,
        -0.04
      ],
      [
        -0.03875,
        -0.02,
        -0.005,
        0.00625,
        0.005,
        0.00625,
        -0.02,
        -0.0425
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bq-plate (clicky)": {
    "version": 1,
    "points": [
      [
        -0.0525,
        -0.0225,
        -0.00875,
        -0.00125,
        -0.01125,
        -0.00625,
        -0.0125,
        -0.0375
      ],
      [
        -0.03875,
        -0.01,
        -0.00125,
        0,
        0.005,
        0.01,
        -0.005,
        -0.04375
      ],
      [
        -0.0175,
        0.00125,
        0.0075,
        0.0225,
        0.0075,
        0.01375,
        -0.00125,
        -0.04125
      ],
      [
        -0.02625,
        -0.01125,
        0,
        0.02625,
        0.02625,
        0.005,
        0.0025,
        -0.0225
      ],
      [
        -0.04,
        -0.00625,
        0.02375,
        0.02125,
        0.0275,
        0.02375,
        0.0075,
        -0.0125
      ],
      [
        -0.03125,
        -0.00875,
        -0.005,
        0.0275,
        0.0225,
        0.0325,
        0.01625,
        -0.01375
      ],
      [
        -0.01625,
        -0.01875,
        -0.0025,
        0.02,
        0.0225,
        0.0175,
        0.005,
        -0.01875
      ],
      [
        -0.035,
        -0.03875,
        -0.00875,
        -0.00375,
        0.02,
        0.02125,
        -0.02625,
        -0.02625
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh vw-plate (c+ng)": {
    "version": 1,
    "points": [
      [
        -0.0525,
        -0.04125,
        -0.0275,
        -0.0175,
        -0.02375,
        -0.02,
        -0.0375,
        -0.0525
      ],
      [
        -0.03875,
        -0.01875,
        -0.01125,
        0,
        0.00125,
        0,
        -0.0075,
        -0.03375
      ],
      [
        -0.03625,
        -0.01625,
        -0.01,
        0.0075,
        0.00875,
        0.00625,
        -0.0025,
        -0.02
      ],
      [
        -0.0625,
        -0.04625,
        -0.0225,
        0,
        0.00125,
        0.0025,
        -0.00875,
        -0.01125
      ],
      [
        -0.06375,
        -0.03125,
        -0.00625,
        0.00875,
        0.01,
        0.00875,
        0.00125,
        0.00125
      ],
      [
        -0.06875,
        -0.0325,
        -0.00625,
        0.00625,
        0.00375,
        0.00375,
        -0.00875,
        -0.01
      ],
      [
        -0.05875,
        -0.0325,
        -0.005,
        0.0075,
        0.00625,
        0.00125,
        -0.015,
        -0.02375
      ],
      [
        -0.04375,
        -0.02875,
        -0.00875,
        -0.00125,
        0.00375,
        0.00375,
        -0.02125,
        -0.03375
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bq-plate (c+ng)": {
    "version": 1,
    "points": [
      [
        -0.04625,
        -0.02875,
        -0.00875,
        -0.0075,
        -0.02,
        -0.01625,
        -0.02375,
        -0.05875
      ],
      [
        -0.0525,
        -0.0225,
        -0.00875,
        0,
        -0.0075,
        -0.0025,
        -0.005,
        -0.05125
      ],
      [
        -0.06625,
        -0.02125,
        -0.02,
        -0.00125,
        0.00625,
        -0.005,
        -0.00625,
        -0.04
      ],
      [
        -0.08875,
        -0.06,
        -0.035,
        -0.0125,
        -0.00875,
        -0.00375,
        -0.00875,
        -0.03125
      ],
      [
        -0.0775,
        -0.03375,
        -0.0025,
        0.00375,
        -0.00875,
        0.01625,
        -0.005,
        0.0375
      ],
      [
        -0.07625,
        -0.02375,
        0,
        0.01125,
        -0.00875,
        0,
        -0.01,
        -0.00375
      ],
      [
        -0.06,
        -0.02375,
        -0.005,
        0.005,
        -0.00625,
        -0.01375,
        -0.0225,
        -0.02
      ],
      [
        -0.06125,
        -0.0525,
        -0.00875,
        -0.01125,
        -0.02125,
        -0.02375,
        -0.04375,
        -0.04375
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh e-plate (c+ng)": {
    "version": 1,
    "points": [
      [
        -0.04875,
        -0.0325,
        -0.01875,
        -0.0175,
        -0.0275,
        -0.02375,
        -0.03125,
        -0.0575
      ],
      [
        -0.0325,
        -0.01875,
        -0.00875,
        0,
        0.00625,
        0.00375,
        -0.00625,
        -0.025
      ],
      [
        -0.0325,
        -0.01,
        -0.00125,
        0.01375,
        0.02125,
        0.0075,
        -0.0025,
        -0.01625
      ],
      [
        -0.05,
        -0.045,
        -0.015,
        0.01375,
        0.01125,
        0.015,
        -0.00875,
        -0.01875
      ],
      [
        -0.05125,
        -0.01375,
        0.00875,
        0.0175,
        0.00875,
        0.015,
        0.0075,
        0.00625
      ],
      [
        -0.05625,
        -0.02125,
        -0.005,
        0.015,
        0.025,
        0.01875,
        0.0075,
        -0.0025
      ],
      [
        -0.05,
        -0.02125,
        -0.01125,
        0.01125,
        0.015,
        0.00625,
        -0.015,
        -0.02875
      ],
      [
        -0.045,
        -0.02125,
        -0.00875,
        0.0025,
        0.0025,
        0.01,
        -0.0175,
        -0.035
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh vw-plate (c+ng+b)": {
    "version": 1,
    "points": [
      [
        -0.07875,
        -0.05875,
        -0.0475,
        -0.02375,
        -0.03,
        -0.03,
        -0.04375,
        -0.0575
      ],
      [
        -0.035,
        -0.02875,
        -0.01875,
        0,
        0.005,
        0.0025,
        -0.00875,
        -0.03625
      ],
      [
        -0.04125,
        -0.02875,
        -0.02125,
        -0.00125,
        0.00375,
        0.00875,
        -0.01625,
        -0.0325
      ],
      [
        -0.06,
        -0.05375,
        -0.03125,
        -0.005,
        -0.00625,
        0,
        -0.00875,
        -0.0175
      ],
      [
        -0.05625,
        -0.03875,
        -0.02,
        0.01125,
        0.00125,
        0.005,
        0,
        -0.00875
      ],
      [
        -0.065,
        -0.04,
        -0.01375,
        0.0025,
        0.00125,
        0.005,
        -0.01,
        -0.01375
      ],
      [
        -0.06375,
        -0.03625,
        -0.0225,
        -0.00125,
        0,
        -0.0075,
        -0.02125,
        -0.0325
      ],
      [
        -0.05875,
        -0.045,
        -0.03,
        -0.00875,
        -0.005,
        -0.00875,
        -0.03375,
        -0.0425
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh e-plate (c+ng+b)": {
    "version": 1,
    "points": [
      [
        -0.1125,
        -0.075,
        -0.0475,
        -0.0375,
        -0.06125,
        -0.055,
        -0.0475,
        -0.09375
      ],
      [
        -0.07125,
        -0.03625,
        -0.0125,
        0,
        -0.01625,
        -0.01875,
        -0.01125,
        -0.04875
      ],
      [
        -0.06625,
        -0.01875,
        -0.00375,
        0.0075,
        0.005,
        -0.005,
        0.0025,
        -0.04
      ],
      [
        -0.08125,
        -0.055,
        -0.01375,
        0.01375,
        0,
        -0.00375,
        0,
        -0.03125
      ],
      [
        -0.0875,
        -0.04,
        -0.00125,
        0.00875,
        0.005,
        0.00375,
        0.01125,
        -0.01
      ],
      [
        -0.09,
        -0.04875,
        -0.01125,
        0.0075,
        0.005,
        -0.00625,
        0,
        -0.0275
      ],
      [
        -0.0875,
        -0.04625,
        -0.0275,
        -0.01,
        -0.01625,
        -0.02375,
        -0.0225,
        -0.0575
      ],
      [
        -0.105,
        -0.0675,
        -0.04625,
        -0.03,
        -0.04375,
        -0.045,
        -0.0475,
        -0.08875
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bq-plate (c+ng+b)": {
    "version": 1,
    "points": [
      [
        -0.09625,
        -0.055,
        -0.035,
        -0.02625,
        -0.03625,
        -0.0375,
        -0.04875,
        -0.06625
      ],
      [
        -0.055,
        -0.015,
        -0.01125,
        0,
        -0.00125,
        -0.00625,
        -0.00875,
        -0.04125
      ],
      [
        -0.04625,
        -0.01125,
        -0.00625,
        0.01,
        0.0075,
        0.00375,
        -0.00375,
        -0.03
      ],
      [
        -0.075,
        -0.03375,
        -0.0125,
        0.00875,
        0.0125,
        -0.0025,
        0.00125,
        -0.02
      ],
      [
        -0.08,
        -0.0375,
        -0.00625,
        0.01125,
        0.01625,
        0.01125,
        0.0075,
        -0.00375
      ],
      [
        -0.085,
        -0.03625,
        -0.0175,
        -0.00125,
        -0.0025,
        -0.00125,
        -0.00375,
        -0.01625
      ],
      [
        -0.08125,
        -0.04125,
        -0.03,
        -0.00375,
        -0.00625,
        -0.02,
        -0.015,
        -0.035
      ],
      [
        -0.07875,
        -0.06375,
        -0.05,
        -0.02625,
        -0.02125,
        -0.02375,
        -0.0475,
        -0.05875
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bq_v2": {
    "version": 1,
    "points": [
      [
        -0.04,
        -0.03375,
        -0.03125,
        -0.015,
        -0.025,
        -0.02375,
        -0.02875,
        -0.04375
      ],
      [
        -0.02375,
        -0.01875,
        -0.01625,
        0,
        0.005,
        0.00875,
        0.005,
        -0.035
      ],
      [
        -0.0375,
        -0.015,
        -0.01,
        0.0125,
        0.02,
        0.015,
        0.01125,
        -0.01625
      ],
      [
        -0.04375,
        -0.02875,
        -0.0175,
        0.0175,
        0.035,
        0.02125,
        0.03125,
        0.005
      ],
      [
        -0.04125,
        -0.00125,
        0.005,
        0.0375,
        0.035,
        0.0425,
        0.04625,
        0.0425
      ],
      [
        -0.03375,
        0.00375,
        0.00875,
        0.035,
        0.0375,
        0.035,
        0.035,
        0.02375
      ],
      [
        -0.015,
        0.005,
        0.01625,
        0.03375,
        0.035,
        0.025,
        0.02875,
        0.01125
      ],
      [
        -0.015,
        -0.0025,
        0.01625,
        0.035,
        0.03875,
        0.03875,
        0.0225,
        0.00875
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh vw-plate (c+ng+b++)": {
    "version": 1,
    "points": [
      [
        -0.0725,
        -0.06375,
        -0.0525,
        -0.03625,
        -0.04125,
        -0.04125,
        -0.05625,
        -0.06375
      ],
      [
        -0.0325,
        -0.02125,
        -0.0225,
        0,
        0,
        0.00125,
        -0.01625,
        -0.04
      ],
      [
        -0.04,
        -0.025,
        -0.01875,
        0.00375,
        0.00375,
        0.015,
        -0.005,
        -0.02125
      ],
      [
        -0.05875,
        -0.045,
        -0.0225,
        0.00375,
        0.0075,
        0.0075,
        0.00375,
        -0.0075
      ],
      [
        -0.0575,
        -0.03875,
        -0.015,
        0.01125,
        0.0075,
        0.0125,
        0.005,
        -0.00375
      ],
      [
        -0.06375,
        -0.03625,
        -0.01375,
        0.005,
        0.0025,
        0.0075,
        -0.0075,
        -0.01125
      ],
      [
        -0.06875,
        -0.0425,
        -0.03125,
        -0.01125,
        -0.0075,
        -0.02125,
        -0.0325,
        -0.045
      ],
      [
        -0.075,
        -0.0575,
        -0.04875,
        -0.03,
        -0.03125,
        -0.03625,
        -0.05625,
        -0.06875
      ]
    ],
    "min_x": 40,
    "max_x": 259.94,
    "min_y": 40,
    "max_y": 259.94,
    "x_count": 8,
    "y_count": 8,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bed_45_left_rotated_try2_10min_heat": {
    "version": 1,
    "points": [
      [
        0.04125,
        0.08875,
        0.1175,
        0.1125,
        0.0825,
        -0.02625
      ],
      [
        0.01375,
        0.06625,
        0.0975,
        0.0925,
        0.0675,
        -0.0225
      ],
      [
        -0.0325,
        0.0275,
        0.065,
        0.0625,
        0.02875,
        -0.0425
      ],
      [
        -0.04,
        0.0175,
        0.0525,
        0.07125,
        0.05125,
        -0.01375
      ],
      [
        0.0025,
        0.055,
        0.095,
        0.1,
        0.0725,
        0.01
      ],
      [
        0.055,
        0.1025,
        0.13125,
        0.12125,
        0.085,
        0.02875
      ]
    ],
    "min_x": 25,
    "max_x": 275,
    "min_y": 25,
    "max_y": 275,
    "x_count": 6,
    "y_count": 6,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bed_45_left_rotated_try1_5min_heated": {
    "version": 1,
    "points": [
      [
        0.05375,
        0.09875,
        0.12625,
        0.12,
        0.0925,
        -0.01875
      ],
      [
        0.025,
        0.07875,
        0.10375,
        0.0975,
        0.075,
        -0.01875
      ],
      [
        -0.02375,
        0.035,
        0.075,
        0.0725,
        0.045,
        -0.02875
      ],
      [
        -0.02875,
        0.02625,
        0.06375,
        0.08375,
        0.0625,
        0.005
      ],
      [
        0.0125,
        0.0625,
        0.10625,
        0.115,
        0.09,
        0.0275
      ],
      [
        0.065,
        0.115,
        0.14125,
        0.13125,
        0.0975,
        0.0475
      ]
    ],
    "min_x": 25,
    "max_x": 275,
    "min_y": 25,
    "max_y": 275,
    "x_count": 6,
    "y_count": 6,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "bed_mesh bed_45_left_rotated_try3_roomtemp": {
    "version": 1,
    "points": [
      [
        0.0325,
        0.08375,
        0.1125,
        0.105,
        0.075,
        -0.04
      ],
      [
        0.00625,
        0.06125,
        0.0875,
        0.07625,
        0.06,
        -0.035
      ],
      [
        -0.0425,
        0.01625,
        0.05,
        0.0475,
        0.02,
        -0.0475
      ],
      [
        -0.04875,
        0.0075,
        0.04375,
        0.0625,
        0.04,
        -0.02
      ],
      [
        -0.005,
        0.0425,
        0.0825,
        0.09,
        0.0675,
        0.0025
      ],
      [
        0.0525,
        0.1,
        0.1275,
        0.115,
        0.07625,
        0.0275
      ]
    ],
    "min_x": 25,
    "max_x": 275,
    "min_y": 25,
    "max_y": 275,
    "x_count": 6,
    "y_count": 6,
    "mesh_x_pps": 2,
    "mesh_y_pps": 2,
    "algo": "bicubic",
    "tension": 0.2
  },
  "temperature_sensor  case": {
    "sensor_type": "ATC Semitec 104GT-2",
    "pullup_resistor": 4700,
    "inline_resistor": 0,
    "sensor_pin": "PF5",
    "min_temp": 5,
    "max_temp": 80
  },
  "temperature_sensor raspberry_pi": {
    "sensor_type": "temperature_host",
    "sensor_path": "/sys/class/thermal/thermal_zone0/temp",
    "min_temp": 10,
    "max_temp": 100
  },
  "board_pins": {
    "mcu": [
      "mcu"
    ],
    "aliases": [
      [
        "EXP1_1",
        "PE8"
      ],
      [
        "EXP1_2",
        "PE7"
      ],
      [
        "EXP1_3",
        "PE9"
      ],
      [
        "EXP1_4",
        "PE10"
      ],
      [
        "EXP1_5",
        "PE12"
      ],
      [
        "EXP1_6",
        "PE13"
      ],
      [
        "EXP1_7",
        "PE14"
      ],
      [
        "EXP1_8",
        "PE15"
      ],
      [
        "EXP1_9",
        "<GND>"
      ],
      [
        "EXP1_10",
        "<5V>"
      ],
      [
        "EXP2_1",
        "PA6"
      ],
      [
        "EXP2_2",
        "PA5"
      ],
      [
        "EXP2_3",
        "PB1"
      ],
      [
        "EXP2_4",
        "PA4"
      ],
      [
        "EXP2_5",
        "PB2"
      ],
      [
        "EXP2_6",
        "PA7"
      ],
      [
        "EXP2_7",
        "PC15"
      ],
      [
        "EXP2_8",
        "<RST>"
      ],
      [
        "EXP2_9",
        "<GND>"
      ],
      [
        "EXP2_10",
        "<5V>"
      ]
    ]
  },
  "display": {
    "lcd_type": "uc1701",
    "cs_pin": "EXP1_3",
    "spi_speed": 10000000,
    "spi_software_sclk_pin": "EXP2_2",
    "spi_software_miso_pin": "EXP2_1",
    "spi_software_mosi_pin": "EXP2_6",
    "a0_pin": "EXP1_4",
    "contrast": 63,
    "rst_pin": "EXP1_5",
    "menu_root": "__main",
    "menu_timeout": 0,
    "menu_reverse_navigation": false,
    "encoder_pins": "^EXP2_5, ^EXP2_3",
    "encoder_steps_per_detent": 4,
    "encoder_fast_rate": 0.03,
    "click_pin": "^!EXP1_2",
    "display_group": "_default_16x4"
  },
  "menu __main __filament __clean": {
    "type": "command",
    "name": "Clean Nozzle",
    "enable": true,
    "gcode": "\nclean_nozzle"
  },
  "menu __main __control __light": {
    "type": "input",
    "index": 0,
    "name": "Case Light {'%3d' % (menu.input*100)}%",
    "enable": true,
    "gcode": "\n{ action_respond_info('%1f loog %f' % (menu.input, printer['output_pin caselight'].value)) }\nSET_PIN PIN=caselight VALUE={'%1f' % (menu.input*10)}",
    "realtime": false,
    "input": "{printer['output_pin caselight'].value}",
    "input_min": "0",
    "input_max": "1",
    "input_step": 0.01
  },
  "output_pin beeper": {
    "pwm": false,
    "pin": "EXP1_1",
    "maximum_mcu_duration": 0,
    "value": 0,
    "shutdown_value": 0
  },
  "neopixel fysetc_mini12864": {
    "pin": "EXP1_6",
    "chain_count": 3,
    "color_order": [
      "RGB"
    ],
    "initial_red": 1,
    "initial_green": 1,
    "initial_blue": 1,
    "initial_white": 0
  },
  "delayed_gcode setdisplayneopixel": {
    "gcode": "\nSET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0\nSET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0\nSET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3",
    "initial_duration": 1
  },
  "homing_override": {
    "set_position_z": 0,
    "axes": "z",
    "gcode": "\nstatus_homing\nG90\nG0 Z10 F1200\nG28 X Y\n\nG0 X150 Y150 F15000\nG28 Z\nG91\nG0 Z20 F5400\nG90\nstatus_ready"
  },
  "gcode_macro g32": {
    "gcode": "\n{% set PARK = (params.PARK|default(true)) %}\n\n\nBED_MESH_CLEAR\n\nG28\nQUAD_GANTRY_LEVEL\nG28\n{% if PARK %}\nG0 X15 Y10 Z20 F18000\n{% endif %}",
    "description": "G-Code macro"
  },
  "gcode_macro l_on": {
    "gcode": "\nSET_LED LED=caselight WHITE=0.4",
    "description": "G-Code macro"
  },
  "gcode_macro l_off": {
    "gcode": "\nSET_LED LED=caselight WHITE=0",
    "description": "G-Code macro"
  },
  "gcode_macro print_end": {
    "gcode": "\n{% set th = printer.toolhead %}\n{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}\n{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}\n{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}\n{% set TARGET_TEMP = printer.extruder.target %}\n\n\nM400\nG92 E0\nG1 E-12.0 F3600\nG90\n\nG0 X{x_safe} Y{y_safe} Z{z_safe} F20000\n\nSET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=target_extruder_tmp VALUE=0\nSET_VELOCITY_LIMIT ACCEL={printer['configfile'].config['printer'][\"max_accel\"]}\n\n\nM104 S205\n\nTEMPERATURE_WAIT SENSOR=extruder MAXIMUM=240\nclean_nozzle\nTURN_OFF_HEATERS\nM107\n\nG90\n\nL_OFF\nM106 S0\n\nstatus_ready",
    "description": "G-Code macro"
  },
  "gcode_macro pause": {
    "gcode": "\n{% set X = params.X|default(230)|float %}\n{% set Y = params.Y|default(230)|float %}\n{% set Z = params.Z|default(10)|float %}\n{% set E = params.E|default(1)|float %}\nSAVE_GCODE_STATE NAME=PAUSE_state\nBASE_PAUSE\nG91\nG1 E-{E} F2100\nG1 Z{Z}\nG90\nG1 X{X} Y{Y} F6000",
    "rename_existing": "BASE_PAUSE",
    "description": "G-Code macro"
  },
  "gcode_macro resume": {
    "gcode": "\n{% set E = params.E|default(1)|float %}\nG91\nG1 E{E} F2100\nG90\nRESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1\nBASE_RESUME",
    "rename_existing": "BASE_RESUME",
    "description": "G-Code macro"
  },
  "printer": {
    "max_velocity": 500,
    "max_accel": 7000,
    "max_accel_to_decel": 3500,
    "square_corner_velocity": 8,
    "buffer_time_low": 1,
    "buffer_time_high": 2,
    "buffer_time_start": 0.25,
    "move_flush_time": 0.05,
    "kinematics": "corexy",
    "max_z_velocity": 30,
    "max_z_accel": 350
  },
  "force_move": {
    "enable_force_move": false
  },
  "verify_heater extruder": {
    "hysteresis": 5,
    "max_error": 120,
    "heating_gain": 2,
    "check_gain_time": 20
  }
}